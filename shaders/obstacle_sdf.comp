#version 430
layout(local_size_x=16, local_size_y=16) in;
layout(binding=0, r8ui)  uniform writeonly uimage2D maskImg;   // 1 = solid, 0 = fluid
layout(binding=1, rg32f) uniform writeonly image2D wallVelImg;  // wall velocity at pixel

layout(std140, binding=2) uniform Obs {
  ivec2 size;
  vec2  center;   // pixels
  float radius;   // pixels
  float omega;    // rad per time-step
} O;

void main(){
  ivec2 p = ivec2(gl_GlobalInvocationID.xy);
  if (any(greaterThanEqual(p, O.size))) return;

  vec2 x = vec2(p);
  vec2 r = x - O.center;
  float d = length(r);
  bool solid = (d <= O.radius);

  // 2D: z-omega cross r => perp
  vec2 uw = vec2(-O.omega * r.y, O.omega * r.x);

  imageStore(maskImg,    p, uvec4(solid ? 1u : 0u));
  imageStore(wallVelImg, p, vec4(uw, 0, 0));
}